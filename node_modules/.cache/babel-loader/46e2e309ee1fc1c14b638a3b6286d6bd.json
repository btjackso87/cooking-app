{"ast":null,"code":"var _jsxFileName = \"/Users/btjackso/Desktop/react_tuts/cooking-ninja/src/components/ThemeSelector.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTheme } from '../hooks/useTheme';\n\n//styles\nimport \"./Themeselector.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst themeColors = ['#58249c', '#249c6b', '#b70233'];\nexport default function ThemeSelector() {\n  _s();\n  const {\n    changeColor,\n    changeMode,\n    mode\n  } = useTheme();\n  const toggleMode = () => {\n    changeMode(mode === 'dark' ? \"light\" : \"dark\");\n  };\n  console.log(mode);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"theme-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mode-toggle\",\n      onClick: () => toggleMode(),\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-buttons\",\n      children: themeColors.map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => changeColor(color),\n        style: {\n          background: color\n        }\n      }, color, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(ThemeSelector, \"n/8EQ1F+DfIgISHcMyMfs9OxzLw=\", false, function () {\n  return [useTheme];\n});\n_c = ThemeSelector;\nvar _c;\n$RefreshReg$(_c, \"ThemeSelector\");","map":{"version":3,"names":["React","useTheme","jsxDEV","_jsxDEV","themeColors","ThemeSelector","_s","changeColor","changeMode","mode","toggleMode","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","color","style","background","_c","$RefreshReg$"],"sources":["/Users/btjackso/Desktop/react_tuts/cooking-ninja/src/components/ThemeSelector.js"],"sourcesContent":["\n\nimport React from 'react'\nimport { useTheme } from '../hooks/useTheme'\n\n//styles\nimport \"./Themeselector.css\"\n\n\n\nconst themeColors = ['#58249c', '#249c6b', '#b70233']\n\nexport default function ThemeSelector() {\n  const {changeColor, changeMode, mode} = useTheme()\n\n  const toggleMode = () => {\n      changeMode(mode === 'dark' ? \"light\" : \"dark\")\n  }\n  console.log(mode)\n\n  return (\n    <div className=\"theme-selector\">\n      <div className='mode-toggle' onClick={() => toggleMode()}>\n            test\n      </div>\n      <div className=\"theme-buttons\">\n        {themeColors.map(color => (\n          <div \n            key={color} \n            onClick={() => changeColor(color)}\n            style={{ background: color }}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n"],"mappings":";;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,mBAAmB;;AAE5C;AACA,OAAO,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAI5B,MAAMC,WAAW,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAErD,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM;IAACC,WAAW;IAAEC,UAAU;IAAEC;EAAI,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAElD,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACrBF,UAAU,CAACC,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;EAClD,CAAC;EACDE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EAEjB,oBACEN,OAAA;IAAKU,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BX,OAAA;MAAKU,SAAS,EAAC,aAAa;MAACE,OAAO,EAAEA,CAAA,KAAML,UAAU,CAAC,CAAE;MAAAI,QAAA,EAAC;IAE1D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNhB,OAAA;MAAKU,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BV,WAAW,CAACgB,GAAG,CAACC,KAAK,iBACpBlB,OAAA;QAEEY,OAAO,EAAEA,CAAA,KAAMR,WAAW,CAACc,KAAK,CAAE;QAClCC,KAAK,EAAE;UAAEC,UAAU,EAAEF;QAAM;MAAE,GAFxBA,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACb,EAAA,CAxBuBD,aAAa;EAAA,QACKJ,QAAQ;AAAA;AAAAuB,EAAA,GAD1BnB,aAAa;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}